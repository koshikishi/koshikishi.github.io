{"version":3,"sources":["script.js"],"names":["menu","document","querySelector","menuToggler","menuLinks","querySelectorAll","closeMenu","ariaLabel","lastChild","innerText","ariaExpanded","removeAnimationClass","onMenuButtonsClickHandler","classList","contains","addAnimationClass","onWindowResizeHandler","this","matches","removeEventListener","link","addEventListener","el","cls","add","timer","remove","offsetWidth","resetCSSAnimation","style","animationDirection","window","setTimeout","removeProperty","matchMedia"],"mappings":"AAAA,MACE,MAAMA,EAAOC,SAASC,cAAc,cAC9BC,EAAcF,SAASC,cAAc,mBACrCE,EAAYJ,EAAKK,iBAAiB,oBAUlCC,EAAY,KAChBH,EAAYI,UAAYJ,EAAYK,UAAUC,UAAY,YAC1DN,EAAYO,cAAe,EAE3BC,EAAqBR,EAAa,yBAA0B,KAC5DQ,EAAqBX,EAAM,oBAAqB,MAG5CY,EAA4B,KAC5BZ,EAAKa,UAAUC,SAAS,qBAC1BR,KAjBFH,EAAYI,UAAYJ,EAAYK,UAAUC,UAAY,aAC1DN,EAAYO,cAAe,EAE3BK,EAAkBZ,EAAa,0BAC/BY,EAAkBf,EAAM,uBAmBpBgB,EAAwB,WAC5B,GAAIC,KAAKC,QAAS,CACZlB,EAAKa,UAAUC,SAAS,sBAC1BR,IAGFH,EAAYgB,oBAAoB,QAASP,GAEzC,IAAK,MAAMQ,KAAQhB,EACjBgB,EAAKD,oBAAoB,QAASP,OAE/B,CACLT,EAAYkB,iBAAiB,QAAST,GAEtC,IAAK,MAAMQ,KAAQhB,EACjBgB,EAAKC,iBAAiB,QAAST,KAcrC,SAASG,EAAkBO,EAAIC,GAC7BD,EAAGT,UAAUW,IAAID,GASnB,SAASZ,EAAqBW,EAAIC,EAAKE,IAevC,SAA2BH,EAAIC,GAC7BD,EAAGT,UAAUa,OAAOH,GACfD,EAAGK,YACRL,EAAGT,UAAUW,IAAID,GAjBjBK,CAAkBN,EAAIC,GACtBD,EAAGO,MAAMC,mBAAqB,UAE9BC,OAAOC,YAAW,KAChBV,EAAGT,UAAUa,OAAOH,GACpBD,EAAGO,MAAMI,eAAe,yBACvBR,GA1BLT,IAEAe,OAAOG,WAAW,sBAAsBb,iBAAiB,SAAUL,IAnDrE","file":"script.min.js","sourcesContent":["(() => {\n  const menu = document.querySelector('.main-menu');\n  const menuToggler = document.querySelector('.header__toggle');\n  const menuLinks = menu.querySelectorAll('.main-menu__link');\n\n  const openMenu = () => {\n    menuToggler.ariaLabel = menuToggler.lastChild.innerText = 'Close menu';\n    menuToggler.ariaExpanded = true;\n\n    addAnimationClass(menuToggler, 'header__toggle--opened');\n    addAnimationClass(menu, 'main-menu--opened');\n  };\n\n  const closeMenu = () => {\n    menuToggler.ariaLabel = menuToggler.lastChild.innerText = 'Open menu';\n    menuToggler.ariaExpanded = false;\n\n    removeAnimationClass(menuToggler, 'header__toggle--opened', 300);\n    removeAnimationClass(menu, 'main-menu--opened', 300);\n  };\n\n  const onMenuButtonsClickHandler = () => {\n    if (menu.classList.contains('main-menu--opened')) {\n      closeMenu();\n    } else {\n      openMenu();\n    }\n  };\n\n  const onWindowResizeHandler = function() {\n    if (this.matches) {\n      if (menu.classList.contains('main-menu--opened')) {\n        closeMenu();\n      }\n\n      menuToggler.removeEventListener('click', onMenuButtonsClickHandler);\n\n      for (const link of menuLinks) {\n        link.removeEventListener('click', onMenuButtonsClickHandler);\n      }\n    } else {\n      menuToggler.addEventListener('click', onMenuButtonsClickHandler);\n\n      for (const link of menuLinks) {\n        link.addEventListener('click', onMenuButtonsClickHandler);\n      }\n    }\n  };\n\n  onWindowResizeHandler();\n\n  window.matchMedia('(min-width: 768px)').addEventListener('change', onWindowResizeHandler);\n\n  /**\n   * Displays the element (adds a class with animation showing the element, for example .shown)\n   * @param {Object} el - the element to be displayed (animated)\n   * @param {string} cls - CSS-class that defines the animation\n   */\n  function addAnimationClass(el, cls) {\n    el.classList.add(cls);\n  }\n\n  /**\n   * Hides the element (removes a class with animation showing the element, for example .shown)\n   * @param {Object} el - the element to be hidden (animated)\n   * @param {string} cls - CSS-class that defines the animation\n   * @param {number} timer - animation duration in milliseconds\n   */\n  function removeAnimationClass(el, cls, timer) {\n    resetCSSAnimation(el, cls);\n    el.style.animationDirection = 'reverse';\n\n    window.setTimeout(() => {\n      el.classList.remove(cls);\n      el.style.removeProperty('animation-direction');\n    }, timer);\n  }\n\n  /**\n   * Resets CSS-animation for the element\n   * @param {Object} el - the element to reset the animation for\n   * @param {string} cls - CSS-class that defines the animation\n   */\n  function resetCSSAnimation(el, cls) {\n    el.classList.remove(cls);\n    void el.offsetWidth;\n    el.classList.add(cls);\n  }\n})();\n"]}